[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"MeasureIt.Drivers.data" = ["*.txt"]

[project]
name = "MeasureIt"
version = "0.0.1"
description = "Measurement code for condensed matter groups at UW based on QCoDeS."
readme = {file = "README.md", content-type = "text/markdown"} 
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Physics",
]
authors = [
    {name = "Elliott Runburg", email = "erunburg@uw.edu"},
    {name = "Jiaqi Cai", email = "caidish@uw.edu"},
    {name = "Christian Rose"},
    {name = "Jack Barlow", email = "barlowmj@uw.edu"}
]
requires-python = ">=3.8"
dependencies = [
    # Core scientific computing
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "pandas>=1.3.0",
    
    # QCoDeS ecosystem
    "qcodes>=0.37.0",
    "qcodes_contrib_drivers>=0.18.0",
    
    # GUI framework
    "PyQt5>=5.15.0",
    "pyqtgraph>=0.13.0",
    
    # Instrument drivers
    "nidaqmx>=0.6.0",
    "zhinst>=21.8.0",
    
    # Platform-specific dependencies
    "multipyvu>=1.2.0; platform_system=='Windows'",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-qt>=4.2.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "pre-commit>=2.20.0",
]

# Documentation dependencies
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "myst-parser>=0.18.0",
]

# Jupyter notebook support
jupyter = [
    "jupyterlab>=3.4.0",
    "notebook>=6.4.0",
    "ipykernel>=6.15.0",
    "ipython>=8.0.0,<8.16",  # Pin to avoid compatibility issues
    "jupyter_client>=7.3.0",
    "jupyter_core>=4.11.0",
    "traitlets>=5.3.0",
    "ipython_genutils>=0.2.0",
]

# Windows-specific dependencies
windows = [
    "pywin32>=304; platform_system=='Windows'",
]

# All optional dependencies
all = [
    "MeasureIt[dev,docs,jupyter,windows]",
]

[project.urls]
Repository = "https://github.com/nanophys/MeasureIt"
Documentation = "https://measureituw.readthedocs.io/en/latest/?badge=latest"
"Bug Reports" = "https://github.com/nanophys/MeasureIt/issues"
"Contributing" = "https://github.com/nanophys/MeasureIt/blob/main/CONTRIBUTING.md"

# Tool configurations
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/MeasureIt",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--strict-markers",
    "--strict-config",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gui: marks tests that require GUI",
]

[tool.coverage.run]
source = ["src/MeasureIt"]
omit = [
    "*/tests/*",
    "*/GUI/*_ui.py",  # Auto-generated UI files
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "D",   # pydocstyle
]
ignore = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]  # Ignore docstring requirements in tests
"*_ui.py" = ["ALL"]  # Ignore all rules for auto-generated UI files

[tool.ruff.lint.isort]
known-first-party = ["MeasureIt"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
exclude = ["*_ui.py"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    ".*_ui\\.py$",  # Auto-generated UI files
]

[[tool.mypy.overrides]]
module = [
    "qcodes.*",
    "nidaqmx.*",
    "zhinst.*",
    "multipyvu.*",
    "PyQt5.*",
]
ignore_missing_imports = true

# UV configuration
[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-qt>=4.2.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[tool.uv.sources]
# For development, use local editable install
MeasureIt = { workspace = true }
